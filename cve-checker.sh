#!/bin/bash

# Author: Andrew Howard

# To-do:
# Take RHEL version as argument
# Read CVE list from file and/or stdin?
# Print relevant RHSA next to recommended minimum package versions
# Sort packages by version number, and print only newest

RHELVER=5
LIST="CVE-2002-0391 CVE-2003-0028
CVE-1999-0018 CVE-1999-0019 CVE-1999-0210 CVE-1999-0493 CVE-2000-0666 CVE-2000-0800
CVE-2012-2733 CVE-2012-3544 CVE-2012-3546 CVE-2012-4431 CVE-2012-4534 CVE-2012-5568 CVE-2012-5885 CVE-2012-5886 CVE-2012-5887 CVE-2013-2067 CVE-2013-2071 CVE-2014-0050
CVE-2010-4478 CVE-2010-4755 CVE-2010-5107 CVE-2011-5000 CVE-2012-0814 CVE-2014-2532
CVE-2010-1452 CVE-2010-1623 CVE-2010-2068 CVE-2011-0419 CVE-2011-1928 CVE-2011-3192 CVE-2011-3348 CVE-2011-3607 CVE-2011-4415 CVE-2012-0031 CVE-2012-0053 CVE-2012-0883 CVE-2012-2687 CVE-2012-3499 CVE-2012-4558 CVE-2013-1862 CVE-2013-1896
CVE-2010-1452 CVE-2010-1623 CVE-2010-2068 CVE-2011-0419 CVE-2011-1928 CVE-2011-3192 CVE-2011-3348 CVE-2011-3607 CVE-2011-4415 CVE-2012-0031 CVE-2012-0053 CVE-2012-0883 CVE-2012-2687 CVE-2012-3499 CVE-2012-4558 CVE-2013-1862 CVE-2013-1896
CVE-2012-4955 CVE-2012-6272
CVE-2009-3555
CVE-2011-3368 CVE-2011-3639 CVE-2011-4317
CVE-2011-3368 CVE-2011-3639 CVE-2011-4317
CVE-2004-0230"


# Requires rpmdevtools
PREREQS="rpmdev-vercmp"
BAIL=0
for COMMAND in $PREREQS; do
  which $COMMAND &>/dev/null
  if [ $? -ne 0 ]; then
    echo "Error: $COMMAND not found in PATH."
    BAIL=1
  fi
done
if [ $BAIL -ne 0 ]; then exit 0; fi


function newest() {
  read NEWEST;
  while read LINE; do
    rpmdev-vercmp $NEWEST $LINE &>/dev/null
    RETVAL=$?
    if [ $RETVAL -eq 12 ]; then
      NEWEST="$LINE"
    fi
  done
  echo "$NEWEST"
}


MINREQ=""
for CVE in $LIST; do
  ERRATA=$( curl https://access.redhat.com/security/cve/$CVE 2>/dev/null |
              sed -n '/<h2>Red Hat security errata<\/h2>/,/disclaimer/p' |
              sed -n '/.*<td>.* Linux.* '$RHELVER'.*<\/td>.*/,/<\/tr>/p' |
              sed -n 's/.*a href="https:\/\/rhn.redhat.com\/errata\/\(RHSA-[0-9]\+-[0-9]\+\).html".*/\1/p' |
              sort -u )
  if [ -z "$ERRATA" ]; then
    echo "$CVE: No errata for RHEL$RHELVER (https://access.redhat.com/security/cve/$CVE)"
  else
    for RHSA in $ERRATA; do
      echo "$CVE: $RHSA (https://rhn.redhat.com/errata/$RHSA.html)"
      CVE=$( echo "$CVE" | sed 's/./ /g' )
      MINREQ="$MINREQ
$( curl https://rhn.redhat.com/errata/$RHSA.html 2>/dev/null |
     sed -n 's/.*>\s*\(.*el'$RHELVER'[0-9\-\._]*\)\.x86_64\.rpm\s*<.*/\1/p' |
     sort -u ) "
    done
  fi
done

echo
echo "Affected packages:"
PKGS=$( echo "$MINREQ" | 
          sed -e 's/\([^.]*\).*/\1/' \
              -e 's/\(.*\)-.*/\1/' \
              -e 's/-[0-9][0-9]*$//' \
              -e '/^\s*$/d' |
          sort -u )
echo "$PKGS"

echo
echo "Minimum required versions:"
MINREQ=$( 
  for PKG in $PKGS; do
    VERSION=$( grep -P "$PKG-\d+[-\.].*$" <<<"$MINREQ" |
                 sed "s/$PKG-//" |
                 newest )
    echo "$PKG $VERSION"
  done | column -t
)
echo "$MINREQ"

# Exit here 'cause we don't know where the script is running
exit 0

echo
echo "Installed versions:"
for PKG in $PKGS; do
  VERSION=$( rpm -q --queryformat "%{VERSION}-%{RELEASE}.%{ARCH}\n" $PKG )
  if [ $? -eq 0 ]; then
    echo "$PKG $VERSION"
  fi
done | column -t

echo
echo "These affected packages are not installed:"
rpm -q $PKGS | grep 'not installed' | cut -d\  -f2
echo

echo
echo "You need to update the following:"
while read LINE; do
  PKG=$( echo "$LINE" | awk '{print $1}' )
  VERSION=$( echo "$LINE" | awk '{print $2}' )
  INSTALLED=$( rpm -q $PKG )
  if [ $? -eq 0 ]; then
    rpmdev-vercmp $INSTALLED $PKG-$VERSION &>/dev/null
    if [ $? -ne 11 ]; then
      echo $PKG
    fi
  fi
done <<<"$MINREQ"


